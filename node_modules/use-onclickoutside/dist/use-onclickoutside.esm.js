import { useEffect } from 'react';

var _isBrowser = typeof document !== 'undefined';

var supportsPassiveEvents;
function testPassiveEventSupport() {
  if (supportsPassiveEvents !== undefined) {
    return supportsPassiveEvents;
  }

  var passive = false;
  var options = Object.defineProperty({}, 'passive', {
    get: function get() {
      passive = true;
    }
  });

  var noop = function noop() {};

  window.addEventListener('test', noop, options);
  window.removeEventListener('test', noop, options);
  supportsPassiveEvents = passive;
  return passive;
}

var TOUCHSTART = 'touchstart';
var events = ['mousedown', TOUCHSTART];

var getOptions = function getOptions(event) {
  if (event !== TOUCHSTART) {
    return;
  }

  if (testPassiveEventSupport()) {
    return {
      passive: true
    };
  }
};

function useOnClickOutside(ref, handler) {
  if (!(_isBrowser)) {
    return;
  }

  useEffect(function () {
    if (!ref.current) {
      return;
    }

    var listener = function listener(event) {
      if (ref.current.contains(event.target)) {
        return;
      }

      handler(event);
    };

    events.forEach(function (event) {
      document.addEventListener(event, listener, getOptions(event));
    });
    return function () {
      events.forEach(function (event) {
        document.removeEventListener(event, listener, getOptions(event));
      });
    };
  });
}

export default useOnClickOutside;
