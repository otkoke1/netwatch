"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const util_1 = require("./util");
const throttle_debounce_1 = require("throttle-debounce");
const defaultEvents = ['mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel'];
const oneMinute = 60e3;
const useIdle = (ms = oneMinute, initialState = false, events = defaultEvents) => {
    const [state, setState] = react_1.useState(initialState);
    react_1.useEffect(() => {
        let mounted = true;
        let timeout;
        let localState = state;
        const set = (newState) => {
            if (mounted) {
                localState = newState;
                setState(newState);
            }
        };
        const onEvent = throttle_debounce_1.throttle(50, () => {
            if (localState) {
                set(false);
            }
            clearTimeout(timeout);
            timeout = setTimeout(() => set(true), ms);
        });
        const onVisibility = () => {
            if (!document.hidden)
                onEvent();
        };
        for (let i = 0; i < events.length; i++) {
            util_1.on(window, events[i], onEvent);
        }
        util_1.on(document, 'visibilitychange', onVisibility);
        timeout = setTimeout(() => set(true), ms);
        return () => {
            mounted = false;
            for (let i = 0; i < events.length; i++) {
                util_1.off(window, events[i], onEvent);
            }
            util_1.off(document, 'visibilitychange', onVisibility);
        };
    }, events);
    return state;
};
exports.default = useIdle;
